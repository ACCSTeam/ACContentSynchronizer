name: ACContentSynchronizer

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest

    env:
      ProjectName: ACContentSynchronizer
      ServerPath: ACContentSynchronizer.Server
      ServerBuild: ACContentSynchronizer.Server/publish
      ServerArchive: ACContentSynchronizer.Server.zip
      WorkerPath: ACContentSynchronizer.ServerWorker
      WorkerBuild: ACContentSynchronizer.ServerWorker/publish
      WorkerArchive: ACContentSynchronizer.ServerWorker.zip
      ClientPath: ACContentSynchronizer.ClientGui
      ClientBuild: ACContentSynchronizer.ClientGui/publish
      ClientArchive: ACContentSynchronizer.ClientGui.zip

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Nerdbank.GitVersioning to set version variables
        uses: aarnott/nbgv@master
        with:
          setAllVars: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Where i am
        run: dir

      - name: Build server win-x64
        run: dotnet publish ${{ env.ServerPath }} -c Release -o ${{ env.ServerBuild }} -r win-x64 -p:PublishSingleFile=true --self-contained true

      - name: Build worker win-x64
        run: dotnet publish ${{ env.WorkerPath }} -c Release -o ${{ env.WorkerBuild }} -r win-x64 -p:PublishSingleFile=true --self-contained true

      - name: Build client win-x64
        run: dotnet publish ${{ env.ClientPath }} -c Release -o ${{ env.ClientBuild }} -r win-x64 -p:PublishSingleFile=true --self-contained true

      - name: Create server archive win-x64
        run: Compress-Archive -Path ${{ env.ServerBuild }}\* -DestinationPath ${{ env.ServerArchive }}

      - name: Create worker archive win-x64
        run: Compress-Archive -Path ${{ env.WorkerBuild }}\* -DestinationPath ${{ env.WorkerArchive }}

      - name: Create client archive win-x64
        run: Compress-Archive -Path ${{ env.ClientBuild }}\* -DestinationPath ${{ env.ClientArchive }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.NBGV_Version }}${{ env.NBGV_PrereleaseVersion }}
          release_name: ${{ env.NBGV_Version }}${{ env.NBGV_PrereleaseVersion }}
          draft: false
          prerelease: false

      - name: Update server win-x64
        id: upload-server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ServerArchive }}
          asset_name: ${{ env.ServerArchive }}
          asset_content_type: application/zip

      - name: Update worker win-x64
        id: upload-worker
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WorkerArchive }}
          asset_name: ${{ env.WorkerArchive }}
          asset_content_type: application/zip

      - name: Update client win-x64
        id: upload-client
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ClientArchive }}
          asset_name: ${{ env.ClientArchive }}
          asset_content_type: application/zip
